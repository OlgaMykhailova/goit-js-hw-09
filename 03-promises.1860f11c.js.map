{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAiBC,SAASC,cAAc,UACxCC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBAI3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,SAAUA,EAAUC,MAAOA,IAErCM,EAAO,CAAEP,SAAUA,EAAUC,MAAOA,G,GAGrCA,E,IAbPR,EAAegB,iBAAiB,SAkBhC,SAAsBC,GAGpB,GADAA,EAAMC,iBACFf,EAAWgB,OAAS,GAAKf,EAAUe,OAAS,GAAKd,EAAYc,OAAS,EAExE,YADArB,EAAAsB,OAAOC,QAAQ,2BAMjB,IAFA,IAAIC,EAAeC,OAAOpB,EAAWgB,OAE5BK,EAAI,EAAGA,EAAID,OAAOlB,EAAYc,OAAQK,GAAK,EAClDC,QAAUnB,EAAckB,EAAI,EAAGF,GAC/BG,QACGC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBV,EAAAsB,OAAOQ,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAH,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBV,EAAAsB,OAAOW,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9Dc,GAAgBC,OAAOnB,EAAUe,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"notiflix/dist/notiflix-3.2.5.min.css\"\n\nconst submitButtonEl = document.querySelector('button');\nconst inputDelay = document.querySelector('input[name=delay]');\nconst inputStep = document.querySelector('input[name=step]');\nconst inputAmount = document.querySelector('input[name=amount]');\n\nsubmitButtonEl.addEventListener('click', makePromises);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n              } else {\n        reject({ position: position, delay: delay });\n       \n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction makePromises(event) {\n\n  event.preventDefault();\n  if (inputDelay.value <= 0 || inputStep.value <= 0 || inputAmount.value <= 0) {\n    Notify.warning('Enter a positive number');\n    return;\n  }\n\n  let currentDelay = Number(inputDelay.value);\n\n  for (let i = 0; i < Number(inputAmount.value); i += 1) {\n    promise = createPromise(i + 1, currentDelay);\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += Number(inputStep.value);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$submitButtonEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","value","Notify","warning","currentDelay","Number","i","promise","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.1860f11c.js.map"}